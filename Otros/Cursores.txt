/***************************************************
				CURSORES
****************************************************/

/* SQL está diseñado de forma transaccional, es decir, una select o un
update se trae todos los registros que cumplan el where y en el caso
del update, actualiza todos los registros.

En algunos casos, necesitamos recorrer registro a registro para procesar
individualmente cada fila. 
Para lograr esto, necesitamos cursores, para procesar cada fila obtenida
en la select o update.

Hay muchas discursiones donde se recomienda evitar el uso de cursores,
pues sql trata cada registro de forma individual, y el rendimiento del
pc puede disminuir. */

/* Pasos para trabajar cn cursores:
1º) Declarar variables que van a contener los valores de las columnas
que vamos a leer en las SELECT.
En este ejemplo leemos el núm, nombre y costo de la materia*/
DECLARE @numero char(4), @nombre varchar(50), @costo decimal (5,2)

/* 2º) Declaramos el cursor. Para crear un cursor, usamos 
DECLARE nombreCursor FOR <sentencia SELECT>.*/
DECLARE materiasComputacion CURSOR
FOR SELECT Mnomateria, Mnombre, Mcostolab
	FROM materia 
	WHERE Mnocarrera = 32

/* 3º) Una vez creado el cursor, lo abrimos usando OPEN NombreCursor */
OPEN materiasComputacion

/* 4º) Leer el 1er registro. Para ello, usamos 
FETCH NEXT FROM NombreCursor.
Cuando lees el cursor, hay que indicar las vbles que vamos a usar para
guardar los valores de cada columna*/
FETCH NEXT FROM materiasComputacion INTO @numero, @nombre, @costo

/* 5º) Crear un bucle para leer cada registro hasta que no haya más
registros en el cursor. 
La forma de saber si FETCH fué exitoso, 
es preguntar si @@FETCH_STATUS = 0
Cualquier otro valor indica que ya no hay registros o existe 
un problema al leerlos */
WHILE @@FETCH_STATUS = 0
BEGIN 
-- Lógica
SELECT 'La materia: ' + @numero + ' - ' + @nombre + ' cuesta: ' 
+ CONVERT(VARCHAR(10), @costo)
-- Antes de continuar con el bucle, intentamos leer otro registro
-- para continuar el bucle con un nuevo registro.
FETCH NEXT FROM materiasComputacion INTO @numero, @nombre, @costo
END
/* 6º) Cuando termina el bucle, cerramos el cursor */
CLOSE materiasComputacion
/* Una buena práctica es borrar el cursor de memoria */
DEALLOCATE materiasComputacion



/************************************************************
			RESUMEN (RECETA DE COCINA)
			PASOS EN ORDEN
*************************************************************/
/*  1º) DECLARAR VARIABLES A USAR
	2º) DECLARAR EL CURSOR
	3º) ABRIR EL CURSOR
	4º) LEER EL 1er REGISTRO USANDO LAS VBLES CREADAS PARA VOLCAR EL CONTENIDO
	5º) CREAR UN BUCLE PARA LEER TODOS LOS REGISTROS. ESTE BUCLE PREGUNTA SI CADA 
	FETCH FUÉ EXITOSO (FETCH_STATUS = 0).
	DENTRO DEL BUCLE, INDICAR LA LÓGICA (USAR VBLES, REALIZAR CÁLCULOS...)
	6º) LEER EL SIGUIENTE REGISTRO (Y EL BUCLE PREGUNTARÁ SI CUANDO INTENTÉ LEER FUE EXITOSO)
	7º) CERRAR EL CURSOR Y BORRARLO DE LA MEMORIA